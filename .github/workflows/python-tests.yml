name: Python Unit Tests

# This workflow runs Python unit tests
permissions:
  contents: read
  actions: write  # For uploading artifacts
  checks: write   # For test results
  pull-requests: write  # For commenting on PRs

on:
  workflow_dispatch:
  push:
    branches: [ develop ]
    paths:
      - 'markdown_to_mrkdwn/**'
      - 'tests/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'markdown_to_mrkdwn/**'
      - 'tests/**'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
      fail-fast: false

    steps:
    # Checkout the repository code
    - name: Checkout repository
      uses: actions/checkout@v4
    
    # Set up Python
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    # Cache dependencies
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-
    
    # Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install -e .
    
    # Run tests and generate coverage report
    - name: Run unit tests with coverage
      run: |
        pytest tests/ --cov=markdown_to_mrkdwn --cov-report=xml --cov-report=term
    
    # Upload coverage report
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true
    
    # Save test results as artifacts
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          coverage.xml
          .coverage
